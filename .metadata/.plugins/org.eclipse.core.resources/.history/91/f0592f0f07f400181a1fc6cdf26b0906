
package services;

import java.util.Collection;

import javax.transaction.Transactional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.util.Assert;

import utilities.AbstractTest;
import domain.Complaint;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {
	"classpath:spring/datasource.xml", "classpath:spring/config/packages.xml"
})
@Transactional
public class ComplaintServiceTest extends AbstractTest {

	//Service under test

	@Autowired
	private ComplaintService	complaintService;


	@Test
	public void testCreateComplaint() {
		final Complaint Complaint;
		Complaint = this.complaintService.create();
		Assert.notNull(Complaint);
	}

	/*
	 * @Test
	 * public void testSaveComplaint() {
	 * final Finder finder;
	 * final Finder finderSaved;
	 * Date dateFinder;
	 * Date dateFinderSaved;
	 * 
	 * finder = this.complaintService.findOne(super.getEntityId("finder1"));
	 * dateFinder = finder.getEndDate();
	 * 
	 * finder.setKeyword("Complaint");
	 * finderSaved = this.complaintService.save(finder);
	 * dateFinderSaved = finderSaved.getEndDate();
	 * 
	 * Assert.isTrue(dateFinder != dateFinderSaved);
	 * Assert.notNull(finderSaved);
	 * }
	 */

	@Test
	public void testDeleteComplaint() {

		final Complaint Complaint;
		Complaint = this.complaintService.findOne(super.getEntityId("Complaint2"));
		this.complaintService.delete(Complaint);

	}

	@Test
	public void testFindAllComplaint() {
		final Collection<Complaint> complaints;
		complaints = this.complaintService.findAll();
		Assert.notEmpty(complaints);
		Assert.notNull(complaints);

	}

	@Test
	public void testFindOneComplaint() {
		final Complaint complaint;

		complaint = this.complaintService.findOne(super.getEntityId("complaint1"));
		Assert.notNull(complaint);

	}

}
