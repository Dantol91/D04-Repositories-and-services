
package services;

import java.util.Collection;

import javax.transaction.Transactional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.util.Assert;

import utilities.AbstractTest;
import domain.ProfessionalRecord;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {
	"classpath:spring/datasource.xml", "classpath:spring/config/packages.xml"
})
@Transactional
public class ProfessionalRecordServiceTest extends AbstractTest {

	@Autowired
	private ProfessionalRecordService	professionalRecordService;


	@Test
	public void testCreateProfessionalRecord() {
		ProfessionalRecord professionalRecord;

		professionalRecord = this.professionalRecordService.create();

		Assert.notNull(professionalRecord);
		Assert.isNull(professionalRecord.getCompanyName());
		Assert.isNull(professionalRecord.getStartDate());
		Assert.isNull(professionalRecord.getEndDate());
		Assert.isNull(professionalRecord.getRole());
		Assert.isNull(professionalRecord.getAttachmentLink());
		Assert.isNull(professionalRecord.getComment());
	}

	@Test
	public void testDeleteProfessionalRecord() {
		ProfessionalRecord professionalRecord;
		Collection<ProfessionalRecord> professionalRecords;

		super.authenticate("handyworker1");
		professionalRecord = this.professionalRecordService.findOne(super.getEntityId("professionalRecord1"));
		professionalRecords = this.professionalRecordService.findAll();

		Assert.isTrue(professionalRecords.contains(professionalRecord));

		this.professionalRecordService.delete(professionalRecord);

		professionalRecords = this.professionalRecordService.findAll();

		Assert.isTrue(!(professionalRecords.contains(professionalRecord)));

		super.authenticate(null);

	}

}
