
package services;

import java.util.Collection;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.Assert;

import repositories.CustomerRepository;
import security.Authority;
import security.UserAccount;
import security.UserAccountService;
import domain.Administrator;
import domain.Customer;

@Service
@Transactional
public class CustomerService {

	// Managed repository
	@Autowired
	private CustomerRepository	customerRepository;

	// Supported services

	@Autowired
	private UserAccountService	userAccountService;


	// Constructor
	public CustomerService() {
		super();
	}

	// Simple CRUD methods
	public Administrator create() {

		Administrator a;
		UserAccount ua;
		Authority auth;

		a = new Administrator();

		ua = this.userAccountService.create();
		auth = new Authority();

		auth.setAuthority("CUSTOMER");
		ua.addAuthority(auth);

		a.setUserAccount(ua);

		a.setSuspicious(false);

		return a;

	}

	public Customer save(final Customer customer) {
		Assert.notNull(customer);

		Customer result;

		result = this.customerRepository.save(customer);

		return result;
	}

	// Other Business Methods

	public Customer getCustomerFromApplicationId(final int applicationId) {

		return this.customerRepository.getCustomerFromApplicationId(applicationId);
	}

	public Customer getTopThreeCustomersComplaints() {

		return this.customerRepository.getTopThreeCustomersComplaints();

	}

	//The listing of customers who have published at least 10% more fix-up tasks than the average, 
	//ordered by number of applications.
	public Collection<Customer> getCustomerMoreFixUpTasks() {

		return this.customerRepository.getCustomerMoreFixUpTasks();

	}

	//The listing of handy workers who have got accepted at least 10% more ap-plications than the average,
	//ordered by number of applications.

}
